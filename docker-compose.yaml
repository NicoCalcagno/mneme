version: '3.8'

services:
  # Main Mneme API service
  mneme-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mneme-api
    ports:
      - "${API_PORT:-8000}:8000"

    # Use .env file directly
    env_file:
      - .env

    # Override specific Docker-related settings
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - OBSIDIAN_VAULT_PATH=/vault/Aitho
      - EMBEDDING_BATCH_SIZE=10
      - CHUNKING_STRATEGY=fixed
      - CHUNK_SIZE=800
      - RETRIEVAL_MIN_SCORE=0.4

    volumes:
      # Mount your Obsidian vault (READ-ONLY for safety)
      - ${OBSIDIAN_VAULT_PATH:-./example-vault}:/vault:ro
      # Persist logs
      - ./data/logs:/app/data/logs

    networks:
      - mneme-network

    restart: unless-stopped

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Gradio Chat Frontend
  mneme-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mneme-frontend
    ports:
      - "7860:7860"

    environment:
      - API_BASE_URL=http://mneme-api:8000/api/v1

    command: python -m gradio_chat

    networks:
      - mneme-network

    depends_on:
      mneme-api:
        condition: service_healthy

    restart: unless-stopped

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Optional: Zipkin for tracing
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: mneme-zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    networks:
      - mneme-network
    restart: unless-stopped
    profiles:
      - observability

networks:
  mneme-network:
    driver: bridge